services:
  postgres:
    image: postgres:17.2
    container_name: postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -p 5432 -U user -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./custom-postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - pg-network

  pgadmin:
    image: dpage/pgadmin4:8.4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "9090:80" # Expose pgAdmin on port 9090
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
      - ./pgadmin4-config/servers.json:/pgadmin4/servers.json
    networks:
      - pg-network

#  api:
#    container_name: api
#    build:
#      context: ./api
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    environment:
#      - DB_URL=jdbc:postgresql://postgres-db:5432/db
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 10s
#    depends_on:
#      postgres:
#        condition: service_healthy
#    networks:
#      - pg-network

#  frontend:
#    container_name: frontend
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    ports:
#      - "3000:3000"
#    depends_on:
#      - api
##      :condition: service_healthy

networks:
  pg-network:
    driver: bridge
