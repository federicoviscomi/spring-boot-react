services:
  postgres:
    image: postgres:17.2
    container_name: postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    ports:
      - "6543:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -p 5432 -U user -d db" ]
      interval: 10s # Check every 10 seconds
      timeout: 5s # Timeout for each check
      retries: 5 # Retry up to 5 times before marking as unhealthy
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - pg-network

  pgadmin:
    image: dpage/pgadmin4:8.4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "9090:80" # Expose pgAdmin on port 9090
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
      - ./pgadmin4-config/servers.json:/pgadmin4/servers.json
    networks:
      - pg-network

  app:
    container_name: spring-boot-app
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: frontend
    build:
      context: ./secure-notes-react
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      app:
        condition: service_healthy

networks:
  pg-network:
    driver: bridge
